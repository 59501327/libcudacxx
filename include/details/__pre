#ifndef __CONFIG_ONCE
    #define __CONFIG_ONCE
    #pragma push_macro("_LIBCPP_CONFIG")
    #undef _LIBCPP_CONFIG
    #include "../libcxx/include/__config"
    #pragma pop_macro("_LIBCPP_CONFIG")
#endif

#pragma push_macro("_LIBCPP_HAS_NO_INT128")
#pragma push_macro("_LIBCPP_BEGIN_NAMESPACE_STD")
#pragma push_macro("_LIBCPP_END_NAMESPACE_STD")
#pragma push_macro("_LIBCPP_INLINE_VISIBILITY")
#pragma push_macro("_VSTD")
#pragma push_macro("_LIBCPP_NO_RTTI")
#pragma push_macro("_LIBCPP_NO_EXCEPTIONS")
#pragma push_macro("USE_DETAILS_CONFIG")

#undef _LIBCPP_HAS_NO_INT128
#define _LIBCPP_HAS_NO_INT128

#undef _LIBCPP_NO_RTTI
#define _LIBCPP_NO_RTTI

#undef _LIBCPP_NO_EXCEPTIONS
#define _LIBCPP_NO_EXCEPTIONS

#undef _LIBCPP_BEGIN_NAMESPACE_STD
#undef _LIBCPP_END_NAMESPACE_STD

#ifdef CUDA_STD_DETAILS
    #define _LIBCPP_BEGIN_NAMESPACE_STD \
        namespace cuda { namespace std { namespace details { inline namespace v1 {
    #define _LIBCPP_END_NAMESPACE_STD } } } }
#else
    #define _LIBCPP_BEGIN_NAMESPACE_STD \
        namespace cuda { namespace std { inline namespace v1 {
    #define _LIBCPP_END_NAMESPACE_STD } } }
#endif

#undef _LIBCPP_INLINE_VISIBILITY
#ifdef __CUDACC__
    #define _LIBCPP_INLINE_VISIBILITY __host__ __device__
    #if defined(__clang__)
        #include <cuda_fp16.h>
        #define __fp16 __half
    #endif
#else
    #define _LIBCPP_INLINE_VISIBILITY
#endif

#undef _VSTD
#define _VSTD cuda::std::v1

#define USE_DETAILS_CONFIG
