/*

Copyright (c) 2018, NVIDIA Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

#ifndef __simt__
#define __simt__
#endif

#include <memory> // I don't understand what gets corrupted if I don't include this

#pragma push_macro("_LIBCPP_NO_AUTO_LINK")
#define _LIBCPP_NO_AUTO_LINK

#ifndef __CONFIG_ONCE
    #define __CONFIG_ONCE
    #pragma push_macro("_LIBCPP_CONFIG")
    #undef _LIBCPP_CONFIG
    #ifdef _NOEXCEPT
    #undef _NOEXCEPT
    #endif
    #include "../libcxx/include/__config"
    #pragma pop_macro("_LIBCPP_CONFIG")
#endif

#pragma push_macro("_LIBCPP_BEGIN_NAMESPACE_STD_NOVERSION")
#pragma push_macro("_LIBCPP_END_NAMESPACE_STD_NOVERSION")
#pragma push_macro("_LIBCPP_CONSTEXPR")
#pragma push_macro("_LIBCPP_HAS_GCC_ATOMIC_IMP")
#pragma push_macro("_LIBCPP_HAS_NO_INT128")
#pragma push_macro("_LIBCPP_BEGIN_NAMESPACE_STD")
#pragma push_macro("_LIBCPP_END_NAMESPACE_STD")
#pragma push_macro("_LIBCPP_INLINE_VISIBILITY")
#pragma push_macro("_VSTD")
#pragma push_macro("_LIBCPP_NO_RTTI")
#pragma push_macro("_LIBCPP_NO_EXCEPTIONS")
#pragma push_macro("USE_DETAILS_CONFIG")

#undef _LIBCPP_CONSTEXPR
#define _LIBCPP_CONSTEXPR constexpr
#define _LIBCPP_HAS_GCC_ATOMIC_IMP

#undef _LIBCPP_HAS_NO_INT128
#define _LIBCPP_HAS_NO_INT128

#undef _LIBCPP_NO_RTTI
#define _LIBCPP_NO_RTTI

#undef _LIBCPP_NO_EXCEPTIONS
#define _LIBCPP_NO_EXCEPTIONS

#undef _LIBCPP_BEGIN_NAMESPACE_STD
#undef _LIBCPP_END_NAMESPACE_STD

#ifdef SIMT_STD_DETAILS
    #define _LIBCPP_BEGIN_NAMESPACE_STD \
        namespace simt { namespace std { namespace details { inline namespace v1 {
    #define _LIBCPP_END_NAMESPACE_STD } } } }
#else
    #define _LIBCPP_BEGIN_NAMESPACE_STD \
        namespace simt { namespace std { inline namespace v1 {
    #define _LIBCPP_END_NAMESPACE_STD } } }
#endif

#define _LIBCPP_BEGIN_NAMESPACE_STD_NOVERSION namespace simt { namespace std {
#define _LIBCPP_END_NAMESPACE_STD_NOVERSION { {

#undef _LIBCPP_INLINE_VISIBILITY
#define _LIBCPP_INLINE_VISIBILITY __host__ __device__
#ifdef __CUDACC__
    #if defined(__clang__)
        #include <cuda_fp16.h>
        #define __fp16 __half
    #endif
    #if defined(__FLT16_MANT_DIG__)
        #include <cuda_fp16.h>
        #define _Float16 __half
    #endif
#else
    #define __host__
    #define __device__
#endif

#undef _VSTD
#define _VSTD simt::std::v1

#define USE_DETAILS_CONFIG

#define LIBCXX_FREESTANDING

